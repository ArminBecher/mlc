name: Rust

on:
  push:
    branches: ["master", "remove-gitlab"]
    tags:
      - "v*"
  pull_request:
    branches: ["master"]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose --release
      - uses: actions/upload-artifact@v3
        with:
          name: linux
          path: ./target/release/mlc
      - name: Run tests
        run: cargo test --verbose

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: cargo build --verbose --release
      - uses: actions/upload-artifact@v3
        with:
          name: windows
          path: ./target/release/mlc.exe
      - name: Run tests
        run: cargo test --verbose

  build_osx:
    runs-on: ubuntu-latest
    steps:
      - run: apt-get update
      - run: apt-get install zip -y      
      - name: Build-musl macOS x86
        uses: Shogan/rust-musl-action@v1.0.2
        with:
         args: cargo build --target x86_64-apple-darwin --release
      - run: zip -r apple-darwin.zip /builds/becheran/mlc_ci/target/x86_64-apple-darwin/release/
      - uses: actions/upload-artifact@v3
        with:
          name: apple-darwin
          path: apple-darwin.zip

  release:
    runs-on: ubuntu-latest
    needs: [release_docker]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: linux
          path: mlc-x86_64-linux
      - uses: actions/download-artifact@v3
        with:
          name: windows
          path: mlc-x86_64-windows
      - uses: actions/download-artifact@v3
        with:
          name: apple-darwin
          path: mlc-x86_64-apple-darwin
      - name: GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            mlc-x86_64-linux
            mlc-x86_64-windows
            mlc-x86_64-apple-darwin

  release_docker:
    runs-on: ubuntu-latest
    needs: [build_osx, build_windows, build_linux]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - run: echo Push docker image $RELEASE_VERSION
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PW }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: becheran/mlc:latest,becheran/mlc:${{ env.RELEASE_VERSION }}
